#!/bin/sh
#
# Create a USB MTP device's filter list based on currently available devices
# (i.e.: produced by 'jmtpfs -l')
#
#
# Copyright (C) 2019 Michael Bideau [France]
#
# This file is part of cryptkey-from-usb-mtp.
#
# cryptkey-from-usb-mtp is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# cryptkey-from-usb-mtp is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with cryptkey-from-usb-mtp.  If not, see <https://www.gnu.org/licenses/>.
#

set -e

# package name
PACKAGE_NAME=cryptkey-from-usb-mtp

# prefixed paths (like Makefile)
# should be replaced at install time
PREFIX="$PREFIX"/usr/local
SYSCONFDIR="$PREFIX"/etc
LIBDIR="$PREFIX"/lib
SBINDIR="$PREFIX"/sbin
DATAROOTDIR="$PREFIX"/share

# configuration
if [ "$CONFIG_DIR" = '' ]; then
    CONFIG_DIR="$SYSCONFDIR"/$PACKAGE_NAME
fi
DEFAULT_CONFIG_FILE=$CONFIG_DIR/default.conf
LOCAL_CONFIG_FILE=$CONFIG_DIR/local.conf
. "$DEFAULT_CONFIG_FILE"
if [ -r "$LOCAL_CONFIG_FILE" ]; then
    . "$LOCAL_CONFIG_FILE"
fi

# including utils
if [ "$INCLUDE_DIR" = '' ]; then
    INCLUDE_DIR="$LIBDIR"/$PACKAGE_NAME/include
fi
UTILS_INC_FILE="$INCLUDE_DIR"/utils.inc.sh
. "$UTILS_INC_FILE"

# this script filename
_THIS_FILENAME="$(basename "$0")"


# usage
usage()
{
    USAGE_LEFT_MARGIN='        '
    _t_FILTER_FILE="$(__tt 'FILTER_FILE')"
    cat <<ENDCAT

$_THIS_FILENAME - $(__tt "Create a USB MTP device's filter list based on currently available devices.")

$(__tt 'USAGE')

    $_THIS_FILENAME [$_t_FILTER_FILE]
    $_THIS_FILENAME -h|--help

$(__tt 'ARGUMENTS')

    $_t_FILTER_FILE ($(__tt 'optional'))
        $(__tt "The path to the created filter file.\\n
        It default to the configuration value of %s which in turn depends on the value of %s.\\n
        Currently it is: '%s'." \
            'MTP_FILTER_FILE' 'MTP_FILTER_STRATEGY' "$MTP_FILTER_FILE")

$(__tt 'OPTIONS')
 
    -h|--help    
        $(__tt 'Display this help.')
 
$(__tt 'ENVIRONMENT')
 
ENDCAT
    usage_environment

    cat <<ENDCAT
 
$(__tt 'EXAMPLES')

    $(__tt "Create default filter file"|comment)
    > $_THIS_FILENAME

    $(__tt "Create a specific filter file"|comment)
    > $_THIS_FILENAME /tmp/new-filter.tmp

ENDCAT
}

# create a filter list based on currently available devices
create_filter_list()
{
    _jmtpfs_error_logfile="$(mktemp)"
    _ret=$TRUE
    debug "Using '%s' to produce to list of available USB MTP devices" 'jmtpfs -l'
    if ! jmtpfs -l 2>"$_jmtpfs_error_logfile" \
    |tail -n +2                               \
    |awk -F ',' '{print $4","$3" |"$6","$5}'  \
    |trim                                     \
    |sed 's/ MTP (ID[0-9]\+)$//g'; then
        cat "$_jmtpfs_error_logfile" >&2
        _ret=$FALSE
    fi
    rm -f "$_jmtpfs_error_logfile"
    return "$_ret"
}


# display help
if [ "$1" = '-h' ] || [ "$1" = '--help' ]; then
    . "$INCLUDE_DIR"/usage.inc.sh
    usage
    usage_bottom
    exit 0
fi

# create filter file
_filter_path="$MTP_FILTER_FILE"
if [ "$1" != '' ]; then
    _filter_path="$1"
fi
if [ -e "$_filter_path" ]; then
    error "$(__tt "Filter file '%s' already exists" "$_filter_path")"
    exit 2
fi
_filter_dir_path="$(dirname "$_filter_path")"
if [ ! -d "$_filter_dir_path" ]; then
    debug "Creating directory '%s' (mode %s)" "$_filter_dir_path" '0750'
    mkdir -p -m 0750 "$_filter_dir_path"
fi
if ! touch "$_filter_path"; then
    error "$(__tt "Failed to create filter file '%s'" "$_filter_path")"
fi
cat >"$_filter_path" <<ENDCAT
# generated by $_THIS_FILENAME, $(date -R)
#
# Vendor ID | Product ID | Description (Vendor Name, Product Name)

ENDCAT
if ! create_filter_list >> "$_filter_path"; then
    error "$(__tt "Failed to add device list ot filter file '%s'" "$_filter_path")"
else
    debug "Sucessfully created filter file '%s'" "$_filter_path"
fi

